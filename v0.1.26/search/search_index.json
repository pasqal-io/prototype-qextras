{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83e\udde9 Qadence Monorepo Overview","text":"<p>Welcome to the documentation hub for the Qadence Monorepo.</p> <p>This repository contains multiple modular Python packages developed and maintained together:</p>"},{"location":"#included-packages","title":"\ud83d\udce6 Included Packages","text":"<ul> <li>libs: Foundational utilities and tools</li> <li>protocols: Quantum protocol definitions and workflows</li> </ul>"},{"location":"#module-docs","title":"\ud83d\udcda Module Docs","text":"<ul> <li>[\ud83d\udcd6 libs documentation]</li> <li>[\ud83d\udcd6 protocols documentation]</li> </ul> <p>Navigate via the sidebar or links above.</p>"},{"location":"#development-resources","title":"\ud83d\udee0 Development Resources","text":"<ul> <li>Setup Guide</li> <li>Build &amp; Test</li> <li>Contributing</li> <li>Repo Structure</li> </ul>"},{"location":"build/","title":"\ud83e\uddea Build &amp; Test Guide","text":""},{"location":"build/#lint-type-check","title":"\ud83e\uddfc Lint &amp; Type Check","text":"<pre><code>hatch run lint\n</code></pre>"},{"location":"build/#run-tests","title":"\ud83e\uddea Run Tests","text":"<p>Each module has its own test configuration. For example:</p> <pre><code>cd test-qadence-protocols\nhatch run test\n</code></pre>"},{"location":"build/#build-python-packages","title":"\ud83d\udee0 Build Python Packages","text":"<pre><code>hatch build\n</code></pre>"},{"location":"build/#build-documentation","title":"\ud83d\udcc4 Build Documentation","text":"<pre><code>mkdocs build\n</code></pre> <p>This will build the root documentation site into the <code>site/</code> directory.</p>"},{"location":"contributing/","title":"\ud83e\udd1d Contributing Guide","text":"<p>We welcome contributions! Please follow the steps below to ensure consistency.</p>"},{"location":"contributing/#code-style","title":"\ud83e\uddfc Code Style","text":"<p>We use the following tools for formatting and linting:</p> <ul> <li><code>black</code></li> <li><code>ruff</code></li> <li><code>mypy</code></li> </ul> <p>Run all checks with:</p> <pre><code>hatch run lint\n</code></pre>"},{"location":"contributing/#tests","title":"\ud83e\uddea Tests","text":"<ul> <li>Write unit tests using <code>pytest</code></li> <li>Place them in the <code>tests/</code> directory of the appropriate module</li> </ul>"},{"location":"contributing/#documentation","title":"\ud83d\udcc4 Documentation","text":"<ul> <li>Write or update relevant <code>*.md</code> files in <code>docs/</code></li> <li> <p>Confirm the site builds properly with:</p> <p>mkdocs build</p> </li> </ul>"},{"location":"contributing/#pull-request-checklist","title":"\u2705 Pull Request Checklist","text":"<ul> <li>[ ] All tests pass</li> <li>[ ] Linting passes</li> <li>[ ] Docs updated if needed</li> </ul>"},{"location":"setup/","title":"\u2699\ufe0f Setup Guide","text":""},{"location":"setup/#1-clone-the-monorepo","title":"1. Clone the Monorepo","text":"<pre><code>git clone https://github.com/pasqal-io/prototype-qextras.git\ncd prototype-qextras\n</code></pre>"},{"location":"setup/#2-install-dependencies","title":"2. Install Dependencies","text":"<p>We use Hatch to manage environments and builds.</p> <pre><code>hatch env create\nhatch shell\n</code></pre>"},{"location":"setup/#3-optional-install-documentation-tools","title":"3. Optional: Install Documentation Tools","text":"<pre><code>pip install mkdocs-material mike\n</code></pre>"},{"location":"structure/","title":"\ud83d\uddc2\ufe0f Monorepo Structure","text":"<p>This repository follows a modular monorepo layout.</p> <pre><code>prototype-qextras/\n\u251c\u2500\u2500 test-qadence-libs/               # Reusable core libraries\n\u251c\u2500\u2500 test-qadence-protocols/          # Quantum protocol implementations\n\u251c\u2500\u2500 docs/                            # Root documentation site (you are here)\n\u251c\u2500\u2500 pyproject.toml                   # Project configuration (Hatch-based)\n\u2514\u2500\u2500 .github/workflows/               # CI/CD pipelines (tests, docs, deploy)\n</code></pre> <p>Each module (e.g., <code>test-qadence-libs</code>, <code>test-qadence-protocols</code>) is independently versioned and published to PyPI.</p>"},{"location":"structure/#directory-conventions","title":"Directory Conventions","text":"<ul> <li>Use <code>src/</code> layout inside each module if needed</li> <li>Tests should live in <code>tests/</code> inside each module</li> <li>Documentation should reside in the root <code>docs/</code> or module-specific docs</li> </ul>"}]}