name: Tests

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

concurrency:
  group: fast-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  test_protocols_ubuntu:
    name: Qadence Protocols (ubuntu)
    if: github.event_name == 'workflow_dispatch' || contains(join(github.event.commits.*.modified), 'test-qadence-protocols/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    defaults:
      run:
        working-directory: test-qadence-protocols
    steps:
      - name: Checkout Qadence extras
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Hatch
        run: pip install hatch
      - name: Run fast tests
        run: hatch -v run test
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: "coverage-data"
          path: .coverage.*
          if-no-files-found: ignore
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  test_libs_ubuntu:
    name: Qadence Libs (ubuntu)
    if: github.event_name == 'workflow_dispatch' || contains(join(github.event.commits.*.modified), 'test-qadence-libs/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    defaults:
      run:
        working-directory: test-qadence-libs
    steps:
      - name: Checkout Qadence libs
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Hatch
        run: pip install hatch
      - name: Run fast tests
        run: hatch -v run test
      - name: Upload coverage data
        uses: actions/upload-artifact@v4
        with:
          name: "coverage-data"
          path: .coverage.*
          if-no-files-found: ignore
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # publish:
  #   name: Publish to PyPI
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   needs: test_protocols_ubuntu
  #   runs-on: ubuntu-latest
  #   permissions:
  #     # IMPORTANT: this permission is mandatory for trusted publishing
  #     id-token: write
  #   steps:
  #     - name: Check out Qadence extras
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.ref }}
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.10"
  #     - name: Install Python dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install hatch
  #     - name: Build package
  #       run: |
  #         hatch build
  #     - name: Publish to PyPI
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #     - name: Confirm deployment
  #       timeout-minutes: 5
  #       run: |
  #         VERSION=${GITHUB_REF#refs/tags/v}
  #         until pip download test_qextras==$VERSION
  #         do
  #           echo "Failed to download from PyPI, will wait for upload and retry."
  #           sleep 1
  #         done

  deploy_docs_monorepo:
    name: Deploy Monorepo docs (ubuntu)
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      - name: Checkout Qadence
        uses: actions/checkout@v4
      - name: Install JetBrains Mono font
        run: |
          sudo apt install -y wget unzip fontconfig
          wget https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
          unzip JetBrainsMono-2.304.zip -d JetBrainsMono
          mkdir -p /usr/share/fonts/truetype/jetbrains
          cp JetBrainsMono/fonts/ttf/*.ttf /usr/share/fonts/truetype/jetbrains/
          fc-cache -f -v
      - name: Install graphviz
        run: sudo apt-get install -y graphviz
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Hatch
        run: pip install hatch
      - name: Deploy docs
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin gh-pages
          hatch -v run docs:mike deploy ${{ github.ref_name }} latest --push --update-aliases

  deploy_docs_protocols:
    name: Deploy Qadence Protocols docs (ubuntu)
    if: startsWith(github.ref, 'refs/tags/v')
    # needs: test_protocols_ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-qadence-protocols
    steps:
      - name: Checkout Qadence Protocols
        uses: actions/checkout@v4
      - name: Install JetBrains Mono font
        run: |
          sudo apt install -y wget unzip fontconfig
          wget https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
          unzip JetBrainsMono-2.304.zip -d JetBrainsMono
          mkdir -p /usr/share/fonts/truetype/jetbrains
          cp JetBrainsMono/fonts/ttf/*.ttf /usr/share/fonts/truetype/jetbrains/
          fc-cache -f -v
      - name: Install graphviz
        run: sudo apt-get install -y graphviz
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Hatch
        run: pip install hatch
      - name: Deploy docs
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin gh-pages
          hatch -v run docs:mike deploy ${{ github.ref_name }} latest --push --update-aliases --deploy-prefix test-qadence-protocols

  deploy_docs_libs:
    name: Deploy Qadence Libs docs (ubuntu)
    if: startsWith(github.ref, 'refs/tags/v')
    # needs: test_libs_ubuntu
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test-qadence-libs
    steps:
      - name: Checkout Qadence Libs
        uses: actions/checkout@v4
      - name: Install JetBrains Mono font
        run: |
          sudo apt install -y wget unzip fontconfig
          wget https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
          unzip JetBrainsMono-2.304.zip -d JetBrainsMono
          mkdir -p /usr/share/fonts/truetype/jetbrains
          cp JetBrainsMono/fonts/ttf/*.ttf /usr/share/fonts/truetype/jetbrains/
          fc-cache -f -v
      - name: Install graphviz
        run: sudo apt-get install -y graphviz
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Hatch
        run: pip install hatch
      - name: Deploy docs
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin gh-pages
          hatch -v run docs:mike deploy ${{ github.ref_name }} latest --push --update-aliases --deploy-prefix test-qadence-libs
